Arity PHP ORM

Copyright (c) 2011-2013 CodenDev
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
3. The name of the author may not be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 
Description
----------

Project		: Arity - Arity PHP ORM
License		: BSD
Home Page	: http://www.codendev.com



Features
----------
    * No XML required.
    * Support nth level of relationships.
    * Table defination exist within the mapping class.
    * Can Supports sql independent providers.
	* Supported Databases:Postgresql
	
Installation procedure:
----------------------

Setup the database connection in config/config.inc.php
Leave PGSQL_SCHEMA as public, if you havent created you own schema.


HOW TO USE:
--------------

Step1: Create model class. 

>file:sample.php

class Sample {
	 
	public static $meta;

	public $id;
	
	public $name;
	
	public $score;

	public function  __construct()  {

		self::$meta->id= new Type('id',ARITY_SERIAL,11,ARITY_EMPTY,ARITY_REQUIRED,ARITY_PRIMARY);
		 
		self::$meta->name= new Type('name',ARITY_VARCHAR,50);
		
		self::$meta->score= Type::create('score',ARITY_INT,11);
	}

}

Step 2: Access the Arity Context methods. Create test.php for accessing the Arity Context methods
for data persistence.

>file:test.php


require 'loader.php';

require 'sample.php';//If the the class is in sample file

echo "/* Create PHP Object*/<br/>";

$testObj=new Sample();

echo "Initialize Simple PHP Object"."<br/>";

$testObj->name="sam";

echo "/* Add Object to Arity peristent manager*/<br/>";

$dbObj=Arity::addObject($testObj);

echo "Create Persistent Object Table<br/>";

$dbObj->createTable();

echo "Save Simple Object or Persist Object"."<br/>";

$dbObj->save();

echo "Fetch Persisted PHP Object from DB"."<br/>";

$rs=$dbObj->fetch()->object();

var_dump($rs);

echo "Clean Simple Object Entries"."<br/>";;

$dbObj->truncateTable();

$rs=$dbObj->fetch()->object();

var_dump($rs);

echo "Drop Persistent Object Table"."<br/>";;

$dbObj->removeTable();

Step3: Completed 
